// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#include "Commun/commun.cginc"

//temperature and density
//x and y are temperature and density
//z and w are new temperature and new density
RWStructuredBuffer<float4> TempAndDensity;

//smoke velocity
RWStructuredBuffer<float4> velocity;


//smoke vorticity
//RWStructuredBuffer<float4> vorticity;


//domain size
int unitPerSide;
float tempAmbiant;
float pressureAtmos;

[numthreads(4,4,4)]
void CSMain (int3 id : SV_DispatchThreadID)
{

    uint flat = flatten(id, unitPerSide);
    uint flatPlusOne = flatten(id, unitPerSide+1);

    //init each buffer before the simulation
    
    //check if inbound
    if (check(id, unitPerSide))
    {
        //temperature
        TempAndDensity[flat].x = tempAmbiant + 30 * step(0, 20.0 - distance(float3(id), float3(unitPerSide / 2.0, 0, unitPerSide / 2.0)));

        //density
        TempAndDensity[flat].y = step(0, 20.0 - distance(float3(id), float3(unitPerSide / 2.0, 0, unitPerSide / 2.0)));

        TempAndDensity[flat].z = 0.0;
        TempAndDensity[flat].w = 0.0;
    }

    //another inbound cher
    if (check(id, unitPerSide+1))
    {
        velocity[flatPlusOne] = float4(0.0, 0.0, 0.0, 1.0);

        //vorticity[flatPlusOne] = float4(0.0, 0.0, 0.0, 1.0);
    }

}
